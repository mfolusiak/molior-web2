# Molior-web server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /usr/share/molior-web;

	# Add index.php to the list if you are using PHP

	server_name _;

        location / {
            proxy_set_header                Host            $host;
            proxy_set_header                X-Real-Ip       $remote_addr;
            proxy_pass                      http://localhost:4200;
            # try_files $uri $uri/ /index.html;
        }

        location /sockjs-node/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_set_header                Host            $host;
            proxy_set_header                X-Real-Ip       $remote_addr;
            proxy_pass                      http://localhost:4200/sockjs-node/;
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
	}

        location /api {
            proxy_set_header                Host            $host;
            proxy_set_header                X-Real-Ip       $remote_addr;
            proxy_pass                      http://localhost:8888;

	     if ($request_method = 'OPTIONS') {
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		#
		# Custom headers and headers various browsers *should* be OK with but aren't
		#
		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
		#
		# Tell client that this pre-flight info is valid for 20 days
		#
		add_header 'Access-Control-Max-Age' 1728000;
		add_header 'Content-Type' 'text/plain; charset=utf-8';
		add_header 'Content-Length' 0;
		return 204;
	     }
	     if ($request_method = 'POST') {
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
		add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
	     }
	     if ($request_method = 'GET') {
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
		add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
	     }

        }

        location /plogin {
            proxy_set_header                Host            $host;
            proxy_set_header                X-Real-Ip       $remote_addr;
            proxy_pass                      http://localhost:8888/login;

	     if ($request_method = 'OPTIONS') {
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		#
		# Custom headers and headers various browsers *should* be OK with but aren't
		#
		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
		#
		# Tell client that this pre-flight info is valid for 20 days
		#
		add_header 'Access-Control-Max-Age' 1728000;
		add_header 'Content-Type' 'text/plain; charset=utf-8';
		add_header 'Content-Length' 0;
		return 204;
	     }
	     if ($request_method = 'POST') {
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
		add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
	     }
	     if ($request_method = 'GET') {
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
		add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
	     }
        }

        location /logout {
            proxy_set_header                Host            $host;
            proxy_set_header                X-Real-Ip       $remote_addr;
            proxy_pass                      http://localhost:8888/logout;

	     if ($request_method = 'OPTIONS') {
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		#
		# Custom headers and headers various browsers *should* be OK with but aren't
		#
		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
		#
		# Tell client that this pre-flight info is valid for 20 days
		#
		add_header 'Access-Control-Max-Age' 1728000;
		add_header 'Content-Type' 'text/plain; charset=utf-8';
		add_header 'Content-Length' 0;
		return 204;
	     }
	     if ($request_method = 'POST') {
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
		add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
	     }
	     if ($request_method = 'GET') {
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
		add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
	     }
        }

        location /api/websocket {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_set_header                Host            $host;
            proxy_set_header                X-Real-Ip       $remote_addr;
            proxy_pass                      http://localhost:8888/api/websocket;
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        location /internal/buildupload {
            proxy_set_header                Host            $host;
            proxy_set_header                X-Real-Ip       $remote_addr;
            proxy_pass                      http://localhost:8888/internal/buildupload;
            client_max_body_size 4G;
        }

        location /internal/buildlog {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_set_header                Host            $host;
            proxy_set_header                X-Real-Ip       $remote_addr;
            proxy_pass                      http://localhost:8888/internal/buildlog;
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        location /internal/registry {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_set_header                Host            $host;
            proxy_set_header                X-Real-Ip       $remote_addr;
            proxy_pass                      http://localhost:8888/internal/registry;
            proxy_connect_timeout 365d;
            proxy_send_timeout 365d;
            proxy_read_timeout 365d;
        }

        location /schroots {
            charset UTF-8;
            alias /var/lib/schroot/chroots;
            autoindex on;
        }

        location /debootstrap {
            charset UTF-8;
            alias /var/lib/molior/debootstrap;
            autoindex on;
        }

        location /buildout {
            charset UTF-8;
            alias /var/lib/molior/buildout;
            autoindex on;
            location ~* \.log$ {
                add_header Content-Type text/plain;
            }
        }

        location /doc {
            charset UTF-8;
            gzip_static on;
            alias /usr/share/doc/molior/;
            add_header Content-Type text/plain;
        }

        location /userdoc {
            alias /usr/share/doc/molior/userdocs;
            autoindex on;
        }
}
